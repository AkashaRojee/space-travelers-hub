{"version":3,"sources":["common/components/RDRow/RDRow.module.scss","common/components/RDRow/RDRow.js"],"names":["module","exports","RDRow","id","title","description","image","reserved","actions","reserve","cancel","useState","buttonText","setButtonText","dispatch","useDispatch","className","styles","src","alt","undefined","type","onClick"],"mappings":"oHACAA,EAAOC,QAAU,CAAC,SAAS,sBAAsB,aAAa,0BAA0B,aAAa,0BAA0B,WAAW,wBAAwB,YAAY,yBAAyB,OAAS,wB,yFCkEjMC,UA7DD,SAAC,GAER,IADLC,EACI,EADJA,GAAIC,EACA,EADAA,MAAOC,EACP,EADOA,YAAaC,EACpB,EADoBA,MAAOC,EAC3B,EAD2BA,SAC3B,IADqCC,QAAWC,EAChD,EADgDA,QAASC,EACzD,EADyDA,OAE7D,EAAoCC,mBAASJ,EAAW,SAAW,WAAnE,mBAAOK,EAAP,KAAmBC,EAAnB,KAEMC,EAAWC,cAYjB,OAEE,sBAAKC,UAAWC,IAAO,UAAvB,UAEE,qBAAKD,UAAWC,IAAO,YAAvB,SACE,qBAAKC,IAAKZ,EAAOa,IAAKf,MAGxB,sBAAKY,UAAWC,IAAO,cAAvB,UAEE,sBAAKD,UAAWC,IAAO,cAAvB,UACGV,GAAa,4CACd,6BAAKH,OAGP,+BAAOC,IAEP,qBAAKW,UAAWC,IAAO,aAAvB,SACE,wBACED,UAAWT,EAAWU,IAAOP,YAASU,EACtCC,KAAK,SACLC,QA/BU,WACdf,GACFO,EAASJ,EAAOP,IAChBU,EAAc,aAEdC,EAASL,EAAQN,IACjBU,EAAc,YAsBV,SAKGD","file":"static/js/0.522a3b24.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"rd-row\":\"RDRow_rd-row__3p8UT\",\"rd-details\":\"RDRow_rd-details__1pK3n\",\"rd-heading\":\"RDRow_rd-heading__38QKA\",\"rd-image\":\"RDRow_rd-image__2LxBe\",\"rd-button\":\"RDRow_rd-button__C3TmT\",\"cancel\":\"RDRow_cancel__tdSg8\"};","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport styles from './RDRow.module.scss';\n\nconst RDRow = ({\n  id, title, description, image, reserved, actions: { reserve, cancel },\n}) => {\n  const [buttonText, setButtonText] = useState(reserved ? 'Cancel' : 'Reserve');\n\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    if (reserved) {\n      dispatch(cancel(id));\n      setButtonText('Reserve');\n    } else {\n      dispatch(reserve(id));\n      setButtonText('Cancel');\n    }\n  };\n\n  return (\n\n    <div className={styles['rd-row']}>\n\n      <div className={styles['rd-image']}>\n        <img src={image} alt={title} />\n      </div>\n\n      <div className={styles['rd-details']}>\n\n        <div className={styles['rd-heading']}>\n          {reserved && (<span>Reserved</span>)}\n          <h2>{title}</h2>\n        </div>\n\n        <span>{description}</span>\n\n        <div className={styles['rd-button']}>\n          <button\n            className={reserved ? styles.cancel : undefined}\n            type=\"button\"\n            onClick={handleClick}\n          >\n            {buttonText}\n          </button>\n        </div>\n\n      </div>\n    </div>\n  );\n};\n\nRDRow.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  reserved: PropTypes.bool.isRequired,\n  actions: PropTypes.shape({\n    reserve: PropTypes.func.isRequired,\n    cancel: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default RDRow;\n"],"sourceRoot":""}