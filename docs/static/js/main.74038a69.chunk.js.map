{"version":3,"sources":["features/header/planet.svg","features/header/Header.js","features/rockets/rocketsSlice.js","features/rockets/Rockets.js","features/dragons/dragonsSlice.js","features/dragons/Dragons.js","features/missions/TableHeader.js","features/missions/TableBody.js","features/missions/missionsSlice.js","features/missions/Missions.js","features/profile/ProfileColumn.js","features/profile/Profile.js","app/App.js","reportWebVitals.js","app/rootReducer.js","app/store.js","index.js"],"names":["linkList","id","name","to","Header","src","logo","alt","map","activeClassName","exact","getRockets","createAsyncThunk","a","axios","get","data","rocketsSlice","createSlice","initialState","reducers","reserve","state","action","find","rocket","payload","reserved","cancel","extraReducers","builder","addCase","fulfilled","forEach","push","rocket_id","title","rocket_name","description","image","flickr_images","actions","RDRow","React","lazy","Rockets","rockets","useSelector","dispatch","useDispatch","useEffect","length","fallback","className","getDragons","dragonsSlice","dragon","type","Dragons","dragons","TableHeader","TableBody","missions","onJoinMission","mission_id","mission_name","joined","onClick","getMissions","joinMission","createAction","leaveMission","missionsSlice","status","pending","rejected","mission","Missions","ProfileColumn","columnTitle","reservedItems","Profiles","filteredMissions","filter","App","basename","path","Profile","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","dragonsReducer","rocketsReducer","missionsReducer","store","configureStore","reducer","rootReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74038a69.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/planet.a63017b2.svg\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport logo from './planet.svg';\n\nconst linkList = [\n  { id: 1, name: 'Rockets', to: '/' },\n  { id: 2, name: 'Dragons', to: '/dragons' },\n  { id: 3, name: 'Missions', to: '/missions' },\n  { id: 4, name: 'My profile', to: '/profile' },\n];\n\nconst Header = () => (\n  <header>\n    <img src={logo} alt=\"Space Travelers' Hub Logo\" />\n    <h1>Space Travelers&apos; Hub</h1>\n    <nav>\n      {linkList.map(({ id, name, to }) => (\n        <NavLink key={id} activeClassName=\"active\" exact to={to}>{name}</NavLink>\n      ))}\n    </nav>\n  </header>\n);\n\nexport default Header;\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const getRockets = createAsyncThunk('/rockets/get', async () => {\n  const { data } = await axios.get('https://api.spacexdata.com/v3/rockets');\n  return data;\n});\n\nexport const rocketsSlice = createSlice({\n  name: 'rockets',\n  initialState: [],\n  reducers: {\n    reserve: (state, action) => {\n      state.find((rocket) => rocket.id === action.payload).reserved = true;\n    },\n    cancel: (state, action) => {\n      state.find((rocket) => rocket.id === action.payload).reserved = false;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getRockets.fulfilled, (state, action) => {\n      action.payload.forEach((rocket) => {\n        state.push({\n          id: rocket.rocket_id,\n          title: rocket.rocket_name,\n          description: rocket.description,\n          image: rocket.flickr_images[0],\n        });\n      });\n    });\n  },\n});\n\nexport const { reserve, cancel } = rocketsSlice.actions;\n\nexport default rocketsSlice.reducer;\n","import React, { useEffect, Suspense } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getRockets, reserve, cancel } from './rocketsSlice';\n\nconst RDRow = React.lazy(() => import('../../common/components/RDRow/RDRow'));\n\nconst Rockets = () => {\n  const rockets = useSelector((state) => state.rockets);\n  const dispatch = useDispatch();\n\n  useEffect(\n    () => {\n      if (rockets.length === 0) dispatch(getRockets());\n    },\n    [],\n  );\n\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <div className=\"rd-rows\">\n        { rockets.map(({\n          id, title, description, image, reserved = false,\n        }) => (\n          <RDRow\n            key={id}\n            id={id}\n            title={title}\n            description={description}\n            image={image}\n            reserved={reserved}\n            actions={{ reserve, cancel }}\n          />\n        ))}\n      </div>\n    </Suspense>\n  );\n};\n\nexport default Rockets;\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const getDragons = createAsyncThunk('/dragons/get', async () => {\n  const { data } = await axios.get('https://api.spacexdata.com/v3/dragons');\n  return data;\n});\n\nexport const dragonsSlice = createSlice({\n  name: 'dragons',\n  initialState: [],\n  reducers: {\n    reserve: (state, action) => {\n      state.find((dragon) => dragon.id === action.payload).reserved = true;\n    },\n    cancel: (state, action) => {\n      state.find((dragon) => dragon.id === action.payload).reserved = false;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getDragons.fulfilled, (state, action) => {\n      action.payload.forEach((dragon) => {\n        state.push({\n          id: dragon.id,\n          title: dragon.name,\n          type: dragon.type,\n          image: dragon.flickr_images[0],\n        });\n      });\n    });\n  },\n});\n\nexport const { reserve, cancel } = dragonsSlice.actions;\n\nexport default dragonsSlice.reducer;\n","import React, { useEffect, Suspense } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getDragons, reserve, cancel } from './dragonsSlice';\n\nconst RDRow = React.lazy(() => import('../../common/components/RDRow/RDRow'));\n\nconst Dragons = () => {\n  const dragons = useSelector((state) => state.dragons);\n  const dispatch = useDispatch();\n\n  useEffect(\n    () => {\n      if (dragons.length === 0) dispatch(getDragons());\n    },\n    [],\n  );\n\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <div className=\"rd-rows\">\n        {dragons.map(({\n          id, title, type, image, reserved = false,\n        }) => (\n          <RDRow\n            key={id}\n            id={id}\n            title={title}\n            description={`Type: ${type}`}\n            image={image}\n            reserved={reserved}\n            actions={{ reserve, cancel }}\n          />\n        ))}\n      </div>\n    </Suspense>\n  );\n};\n\nexport default Dragons;\n","const TableHeader = () => (\n  <thead>\n    <tr>\n      <th>Missions</th>\n      <th>Descripition</th>\n      <th>Status</th>\n      <th aria-label=\"Leave/Join Mission\" />\n    </tr>\n  </thead>\n);\n\nexport default TableHeader;\n","import propTypes from 'prop-types';\n\nconst TableBody = ({ missions, onJoinMission }) => (\n  <tbody>\n    {\n      missions.map(({\n        mission_id: id, mission_name: name, description, joined,\n      }) => (\n        <tr key={id}>\n          <td>{name}</td>\n          <td>\n            {description}\n          </td>\n          <td>\n            <span title=\"badge\" className={`${joined ? 'joined' : ''}`}>{!joined ? 'NOT A MEMBER' : 'Active Member' }</span>\n          </td>\n          <td>\n            <button type=\"button\" className={`${joined ? 'joined' : ''}`} onClick={() => onJoinMission(id, joined)}>{!joined ? 'Join Mission' : 'Leave Mission' }</button>\n          </td>\n        </tr>\n      ))\n    }\n  </tbody>\n);\n\nTableBody.propTypes = {\n  missions: propTypes.arrayOf(propTypes.any).isRequired,\n  onJoinMission: propTypes.func.isRequired,\n};\n\nexport default TableBody;\n","import { createSlice, createAsyncThunk, createAction } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const getMissions = createAsyncThunk('/missions/getMissions', async () => {\n  const { data } = await axios.get('https://api.spacexdata.com/v3/missions');\n  return data;\n});\n\nexport const joinMission = createAction('joinMission');\nexport const leaveMission = createAction('leaveMission');\n\nconst missionsSlice = createSlice({\n  name: 'missons',\n  initialState: {\n    missions: [],\n    status: null,\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getMissions.pending, (state) => {\n      state.status = 'loading';\n    });\n    builder.addCase(getMissions.fulfilled, (state, action) => {\n      state.missions = action.payload;\n      state.status = 'success';\n    });\n    builder.addCase(getMissions.rejected, (state) => {\n      state.status = 'failed';\n    });\n    builder.addCase(joinMission, (state, action) => {\n      const missions = [...state.missions];\n      missions.find((mission) => mission.mission_id === action.payload).joined = true;\n    });\n    builder.addCase(leaveMission, (state, action) => {\n      const missions = [...state.missions];\n      missions.find((mission) => mission.mission_id === action.payload).joined = false;\n    });\n  },\n});\n\nexport default missionsSlice.reducer;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport TableHeader from './TableHeader';\nimport TableBody from './TableBody';\nimport { getMissions, joinMission, leaveMission } from './missionsSlice';\nimport './mission.scss';\n\nconst Missions = () => {\n  const { missions } = useSelector((state) => state).missions;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (missions.length === 0) dispatch(getMissions());\n  }, []);\n\n  const handleMission = (id, joined) => {\n    dispatch(joined ? leaveMission(id) : joinMission(id));\n  };\n\n  return (\n    <section className=\"missions-section\">\n      <table className=\"mission-table\">\n        <TableHeader />\n        <TableBody onJoinMission={handleMission} missions={missions} />\n      </table>\n    </section>\n  );\n};\n\nexport default Missions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileColumn = ({ columnTitle, reservedItems }) => (\n  <div className=\"profile-column\">\n    <h2>{columnTitle}</h2>\n    <ul>\n      { reservedItems.map(({ title }) => (\n        <li key={title}>{title}</li>\n      ))}\n    </ul>\n  </div>\n);\n\nProfileColumn.propTypes = {\n  columnTitle: PropTypes.string.isRequired,\n  reservedItems: PropTypes.arrayOf(PropTypes.any.isRequired).isRequired,\n};\n\nexport default ProfileColumn;\n","import { useSelector } from 'react-redux';\nimport ProfileColumn from './ProfileColumn';\n\nconst Profiles = () => {\n  const rockets = useSelector((state) => state.rockets);\n  const dragons = useSelector((state) => state.dragons);\n  const { missions } = useSelector((state) => state).missions;\n\n  const filteredMissions = missions\n    .filter((mission) => (mission.joined === true))\n    .map((mission) => ({ title: mission.mission_name }));\n\n  return (\n    <div className=\"profiles\">\n      <ProfileColumn\n        columnTitle=\"My Rockets\"\n        reservedItems={rockets.filter((rocket) => rocket.reserved === true)}\n      />\n      <ProfileColumn\n        columnTitle=\"My Dragons\"\n        reservedItems={dragons.filter((dragon) => dragon.reserved === true)}\n      />\n      <ProfileColumn\n        columnTitle=\"My Missions\"\n        reservedItems={filteredMissions}\n      />\n    </div>\n  );\n};\n\nexport default Profiles;\n","/* eslint-disable */\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Header from '../features/header/Header';\nimport Rockets from '../features/rockets/Rockets';\nimport Dragons from '../features/dragons/Dragons';\nimport Missions from '../features/missions/Missions';\nimport Profile from '../features/profile/Profile';\nimport './scss/styles.scss';\n\nfunction App() {\n  return (\n    <BrowserRouter basename=\"/space-travelers-hub\">\n      <Header />\n      <main>\n        <Switch>\n          <Route exact path=\"/\">\n            <Rockets />\n          </Route>\n          <Route path=\"/dragons\">\n            <Dragons />\n          </Route>\n          <Route path=\"/missions\">\n            <Missions />\n          </Route>\n          <Route path=\"/profile\">\n            <Profile />\n          </Route>\n        </Switch>\n      </main>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport dragonsReducer from '../features/dragons/dragonsSlice';\nimport rocketsReducer from '../features/rockets/rocketsSlice';\nimport missionsReducer from '../features/missions/missionsSlice';\n\nexport default combineReducers({\n  dragons: dragonsReducer,\n  rockets: rocketsReducer,\n  missions: missionsReducer,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './rootReducer';\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './app/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}