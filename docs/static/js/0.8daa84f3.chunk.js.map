{"version":3,"sources":["common/components/RDRow/RDRow.module.scss","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","common/components/RDRow/RDRow.js"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","RDRow","id","title","description","image","reserved","actions","reserve","cancel","useState","buttonText","setButtonText","dispatch","useDispatch","className","styles","src","alt","type","onClick"],"mappings":"oHACAA,EAAOC,QAAU,CAAC,SAAS,sBAAsB,aAAa,0BAA0B,aAAa,0BAA0B,WAAW,wBAAwB,YAAY,yBAAyB,OAAS,wB,mDCGjM,SAASC,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,G,0CI6DvFC,UA7DD,SAAC,GAER,IADLC,EACI,EADJA,GAAIC,EACA,EADAA,MAAOC,EACP,EADOA,YAAaC,EACpB,EADoBA,MAAOC,EAC3B,EAD2BA,SAC3B,IADqCC,QAAWC,EAChD,EADgDA,QAASC,EACzD,EADyDA,OAE7D,IAAoCC,mBAASJ,EAAW,SAAW,WAAnE,GAAOK,EAAP,KAAmBC,EAAnB,KAEMC,EAAWC,cAYjB,OAEE,sBAAKC,UAAWC,IAAO,UAAvB,UAEE,qBAAKD,UAAWC,IAAO,YAAvB,SACE,qBAAKC,IAAKZ,EAAOa,IAAKf,MAGxB,sBAAKY,UAAWC,IAAO,cAAvB,UAEE,sBAAKD,UAAWC,IAAO,cAAvB,UACGV,GAAa,4CACd,6BAAKH,OAGP,+BAAOC,IAEP,qBAAKW,UAAWC,IAAO,aAAvB,SACE,wBACED,UAAWT,EAAWU,IAAOP,YAASnB,EACtC6B,KAAK,SACLC,QA/BU,WACdd,GACFO,EAASJ,EAAOP,IAChBU,EAAc,aAEdC,EAASL,EAAQN,IACjBU,EAAc,YAsBV,SAKGD","file":"static/js/0.8daa84f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"rd-row\":\"RDRow_rd-row__3p8UT\",\"rd-details\":\"RDRow_rd-details__1pK3n\",\"rd-heading\":\"RDRow_rd-heading__38QKA\",\"rd-image\":\"RDRow_rd-image__2LxBe\",\"rd-button\":\"RDRow_rd-button__C3TmT\",\"cancel\":\"RDRow_cancel__tdSg8\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styles from './RDRow.module.scss';\n\nconst RDRow = ({\n  id, title, description, image, reserved, actions: { reserve, cancel },\n}) => {\n  const [buttonText, setButtonText] = useState(reserved ? 'Cancel' : 'Reserve');\n\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    if (reserved) {\n      dispatch(cancel(id));\n      setButtonText('Reserve');\n    } else {\n      dispatch(reserve(id));\n      setButtonText('Cancel');\n    }\n  };\n\n  return (\n\n    <div className={styles['rd-row']}>\n\n      <div className={styles['rd-image']}>\n        <img src={image} alt={title} />\n      </div>\n\n      <div className={styles['rd-details']}>\n\n        <div className={styles['rd-heading']}>\n          {reserved && (<span>Reserved</span>)}\n          <h2>{title}</h2>\n        </div>\n\n        <span>{description}</span>\n\n        <div className={styles['rd-button']}>\n          <button\n            className={reserved ? styles.cancel : undefined}\n            type=\"button\"\n            onClick={handleClick}\n          >\n            {buttonText}\n          </button>\n        </div>\n\n      </div>\n    </div>\n  );\n};\n\nRDRow.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  reserved: PropTypes.bool.isRequired,\n  actions: PropTypes.shape({\n    reserve: PropTypes.func.isRequired,\n    cancel: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default RDRow;\n"],"sourceRoot":""}