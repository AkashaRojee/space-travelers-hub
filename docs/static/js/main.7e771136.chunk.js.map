{"version":3,"sources":["features/header/planet.svg","features/header/Header.js","features/rockets/rocketSlice.js","features/rockets/Rockets.js","features/dragons/store/api.js","features/dragons/store/dragonsSlice.js","features/dragons/Dragons.js","features/missions/TableHeader.js","features/missions/TableBody.js","features/missions/missionSlice.js","features/missions/Missions.js","features/profile/ProfileColumn.js","features/profile/Profile.js","app/App.js","reportWebVitals.js","app/rootReducer.js","features/dragons/store/middleware/api.js","app/store.js","index.js"],"names":["linkList","id","name","to","Header","src","logo","alt","map","activeClassName","exact","rocketSlice","createSlice","initialState","reducers","add","state","action","push","payload","reserve","find","rocket","reserved","cancel","actions","RDRow","React","lazy","Rockets","rockets","useSelector","dispatch","useDispatch","useEffect","length","a","axios","get","data","forEach","rocket_id","title","rocket_name","description","image","flickr_images","fallback","className","API_REQUESTED","DRAGONS_REQUESTED","DRAGONS_LOADED","DRAGON_RESERVED","DRAGON_UNRESERVED","loadDragons","getState","dragons","lastFetched","type","url","onStart","onSuccess","reserveDragon","unReserveDragon","list","isLoading","reducer","Date","now","imgSrc","isReserved","dragon","Dragons","dragonsList","TableHeader","TableBody","missions","onJoinMission","mission_id","mission_name","joined","onClick","getMissions","createAsyncThunk","joinMission","createAction","leaveMission","missionSlice","status","extraReducers","builder","addCase","pending","fulfilled","rejected","mission","Missions","ProfileColumn","columnTitle","reservedItems","Profiles","filteredMissions","filter","App","basename","path","Profile","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","dragonReducer","rocketsReducer","api","next","apiActions","method","body","onError","fetch","headers","response","json","store","configureStore","rootReducer","middleware","getDefaultMiddleware","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e771136.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/planet.a63017b2.svg\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport logo from './planet.svg';\n\nconst linkList = [\n  { id: 1, name: 'Rockets', to: '/' },\n  { id: 2, name: 'Dragons', to: '/dragons' },\n  { id: 3, name: 'Missions', to: '/missions' },\n  { id: 4, name: 'My profile', to: '/profile' },\n];\n\nconst Header = () => (\n  <header>\n    <img src={logo} alt=\"Space Travelers' Hub Logo\" />\n    <h1>Space Travelers&apos; Hub</h1>\n    <nav>\n      {linkList.map(({ id, name, to }) => (\n        <NavLink key={id} activeClassName=\"active\" exact to={to}>{name}</NavLink>\n      ))}\n    </nav>\n  </header>\n);\n\nexport default Header;\n","import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const rocketSlice = createSlice({\n  name: 'rockets',\n  initialState: [],\n  reducers: {\n    add: (state, action) => {\n      state.push(action.payload);\n    },\n    reserve: (state, action) => {\n      state.find((rocket) => rocket.id === action.payload).reserved = true;\n    },\n    cancel: (state, action) => {\n      state.find((rocket) => rocket.id === action.payload).reserved = false;\n    },\n  },\n});\n\nexport const { add, reserve, cancel } = rocketSlice.actions;\n\nexport const getRockets = () => async (dispatch) => {\n  const { data } = await axios.get('https://api.spacexdata.com/v3/rockets');\n  data.forEach((rocket) => {\n    dispatch(add({\n      id: rocket.rocket_id,\n      title: rocket.rocket_name,\n      description: rocket.description,\n      image: rocket.flickr_images[0],\n    }));\n  });\n};\n\nexport default rocketSlice.reducer;\n","import React, { useEffect, Suspense } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getRockets, reserve, cancel } from './rocketSlice';\n\nconst RDRow = React.lazy(() => import('../../common/components/RDRow/RDRow'));\n\nconst Rockets = () => {\n  const rockets = useSelector((state) => state.rockets);\n  const dispatch = useDispatch();\n\n  useEffect(\n    () => {\n      if (rockets.length === 0) dispatch(getRockets());\n    },\n    [],\n  );\n\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <div className=\"rd-rows\">\n        { rockets.map(({\n          id, title, description, image, reserved = false,\n        }) => (\n          <RDRow\n            key={id}\n            id={id}\n            title={title}\n            description={description}\n            image={image}\n            reserved={reserved}\n            actions={{ reserve, cancel }}\n          />\n        ))}\n      </div>\n    </Suspense>\n  );\n};\n\nexport default Rockets;\n","// ACTION TYPES\nexport const API_REQUESTED = 'api/requested';\nexport const API_CALL_SUCCESS = 'api/success';\nexport const API_CALL_FAIL = 'api/fail';\n\n// ACTION CREATORS\n\nexport const requestAPICall = (payload) => ({\n  type: API_REQUESTED,\n  payload,\n});\nexport const onAPICallSuccess = () => ({\n  type: API_CALL_SUCCESS,\n});\nexport const onAPICallFail = () => ({\n  type: API_CALL_FAIL,\n});\n","import * as apiActions from './api';\n\n// ACTION TYPES\nconst DRAGONS_REQUESTED = 'dragons/request';\nconst DRAGONS_LOADED = 'dragons/load';\nconst DRAGON_RESERVED = 'dragon/:id/reserve';\nconst DRAGON_UNRESERVED = 'dragon/:id/unreserve';\n\n// ACTION CREATORS\nexport const loadDragons = () => (dispatch, getState) => {\n  const {\n    dragons: { lastFetched },\n  } = getState();\n  return lastFetched\n    ? getState()\n    : dispatch(\n      apiActions.requestAPICall({\n        url: 'https://api.spacexdata.com/v3/dragons',\n        onStart: DRAGONS_REQUESTED,\n        onSuccess: DRAGONS_LOADED,\n      }),\n    );\n};\nexport const reserveDragon = (id) => ({\n  type: DRAGON_RESERVED,\n  payload: { id },\n});\nexport const unReserveDragon = (id) => ({\n  type: DRAGON_UNRESERVED,\n  payload: { id },\n});\n\n// REDUCER\nconst initialState = {\n  list: [],\n  isLoading: false,\n  lastFetched: null,\n};\nconst reducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  if (type === DRAGONS_REQUESTED) return { ...state, isLoading: true };\n  if (type === DRAGONS_LOADED) {\n    return {\n      ...state,\n      lastFetched: Date.now(),\n      isLoading: false,\n      list: payload.map(({\n        id, name, type, flickr_images: [imgSrc],\n      }) => ({\n        id,\n        title: name,\n        type,\n        imgSrc,\n        isReserved: false,\n      })),\n    };\n  }\n  if (type === DRAGON_RESERVED) {\n    return {\n      ...state,\n      list: state.list.map((dragon) => (dragon.id === payload.id\n        ? { ...dragon, isReserved: true }\n        : dragon)),\n    };\n  }\n  if (type === DRAGON_UNRESERVED) {\n    return {\n      ...state,\n      list: state.list.map((dragon) => (dragon.id === payload.id\n        ? { ...dragon, isReserved: false }\n        : dragon)),\n    };\n  }\n  return state;\n};\n\nexport default reducer;\n","import React, { useEffect, Suspense } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { loadDragons, reserveDragon, unReserveDragon } from './store/dragonsSlice';\n\nconst RDRow = React.lazy(() => import('../../common/components/RDRow/RDRow'));\n\nconst Dragons = () => {\n  const { list: dragonsList } = useSelector((state) => state.dragons);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadDragons());\n  }, []);\n\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <div className=\"rd-rows\">\n        {dragonsList.map(({\n          id, title, type, isReserved, imgSrc,\n        }) => (\n          <RDRow\n            key={id}\n            id={id}\n            title={title}\n            description={`Type: ${type}`}\n            image={imgSrc}\n            reserved={isReserved}\n            actions={{ reserve: reserveDragon, cancel: unReserveDragon }}\n          />\n        ))}\n      </div>\n    </Suspense>\n  );\n};\n\nexport default Dragons;\n","const TableHeader = () => (\n  <thead>\n    <tr>\n      <th>Missions</th>\n      <th>Descripition</th>\n      <th>Status</th>\n      <th aria-label=\"Leave/Join Mission\" />\n    </tr>\n  </thead>\n);\n\nexport default TableHeader;\n","import propTypes from 'prop-types';\n\nconst TableBody = ({ missions, onJoinMission }) => (\n  <tbody>\n    {\n      missions.map(({\n        mission_id: id, mission_name: name, description, joined,\n      }) => (\n        <tr key={id}>\n          <td>{name}</td>\n          <td>\n            {description}\n          </td>\n          <td>\n            <span className={`${joined ? 'joined' : ''}`}>{!joined ? 'NOT A MEMBER' : 'Active Member' }</span>\n          </td>\n          <td>\n            <button type=\"button\" className={`${joined ? 'joined' : ''}`} onClick={() => onJoinMission(id, joined)}>{!joined ? 'Join Mission' : 'Leave Mission' }</button>\n          </td>\n        </tr>\n      ))\n    }\n  </tbody>\n);\n\nTableBody.propTypes = {\n  missions: propTypes.arrayOf(propTypes.any).isRequired,\n  onJoinMission: propTypes.func.isRequired,\n};\n\nexport default TableBody;\n","import { createSlice, createAsyncThunk, createAction } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const getMissions = createAsyncThunk('/missions/getMissions', async () => {\n  const { data } = await axios.get('https://api.spacexdata.com/v3/missions');\n  return data;\n});\n\nexport const joinMission = createAction('joinMission');\nexport const leaveMission = createAction('leaveMission');\n\nconst missionSlice = createSlice({\n  name: 'missons',\n  initialState: {\n    missions: [],\n    status: null,\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getMissions.pending, (state) => {\n      state.status = 'loading';\n    });\n    builder.addCase(getMissions.fulfilled, (state, action) => {\n      state.missions = action.payload;\n      state.status = 'success';\n    });\n    builder.addCase(getMissions.rejected, (state) => {\n      state.status = 'failed';\n    });\n    builder.addCase(joinMission, (state, action) => {\n      const missions = [...state.missions];\n      missions.find((mission) => mission.mission_id === action.payload).joined = true;\n    });\n    builder.addCase(leaveMission, (state, action) => {\n      const missions = [...state.missions];\n      missions.find((mission) => mission.mission_id === action.payload).joined = false;\n    });\n  },\n});\n\nexport default missionSlice.reducer;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport TableHeader from './TableHeader';\nimport TableBody from './TableBody';\nimport { getMissions, joinMission, leaveMission } from './missionSlice';\nimport './mission.scss';\n\nconst Missions = () => {\n  const { missions } = useSelector((state) => state).missions;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (missions.length === 0) dispatch(getMissions());\n  }, []);\n\n  const handleMission = (id, joined) => {\n    dispatch(joined ? leaveMission(id) : joinMission(id));\n  };\n\n  return (\n    <section className=\"missions-section\">\n      <table className=\"mission-table\">\n        <TableHeader />\n        <TableBody onJoinMission={handleMission} missions={missions} />\n      </table>\n    </section>\n  );\n};\n\nexport default Missions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileColumn = ({ columnTitle, reservedItems }) => (\n  <div className=\"profile-column\">\n    <h2>{columnTitle}</h2>\n    <ul>\n      { reservedItems.map(({ title }) => (\n        <li key={title}>{title}</li>\n      ))}\n    </ul>\n  </div>\n);\n\nProfileColumn.propTypes = {\n  columnTitle: PropTypes.string.isRequired,\n  reservedItems: PropTypes.arrayOf(PropTypes.any.isRequired).isRequired,\n};\n\nexport default ProfileColumn;\n","import { useSelector } from 'react-redux';\nimport ProfileColumn from './ProfileColumn';\n\nconst Profiles = () => {\n  const rockets = useSelector((state) => state.rockets);\n  const { list: dragonsList } = useSelector((state) => state.dragons);\n  const { missions } = useSelector((state) => state).missions;\n\n  const filteredMissions = missions\n    .filter((mission) => (mission.joined === true))\n    .map((mission) => ({ title: mission.mission_name }));\n\n  return (\n    <div className=\"profiles\">\n      <ProfileColumn\n        columnTitle=\"My Rockets\"\n        reservedItems={rockets.filter((rocket) => rocket.reserved === true)}\n      />\n      <ProfileColumn\n        columnTitle=\"My Dragons\"\n        reservedItems={dragonsList.filter((dragon) => dragon.isReserved === true)}\n      />\n      <ProfileColumn\n        columnTitle=\"My Missions\"\n        reservedItems={filteredMissions}\n      />\n    </div>\n  );\n};\n\nexport default Profiles;\n","/* eslint-disable */\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Header from '../features/header/Header';\nimport Rockets from '../features/rockets/Rockets';\nimport Dragons from '../features/dragons/Dragons';\nimport Missions from '../features/missions/Missions';\nimport Profile from '../features/profile/Profile';\nimport './scss/styles.scss';\n\nfunction App() {\n  return (\n    <BrowserRouter basename=\"/space-travelers-hub\">\n      <Header />\n      <main>\n        <Switch>\n          <Route exact path=\"/\">\n            <Rockets />\n          </Route>\n          <Route path=\"/dragons\">\n            <Dragons />\n          </Route>\n          <Route path=\"/missions\">\n            <Missions />\n          </Route>\n          <Route path=\"/profile\">\n            <Profile />\n          </Route>\n        </Switch>\n      </main>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport dragonReducer from '../features/dragons/store/dragonsSlice';\nimport rocketsReducer from '../features/rockets/rocketSlice';\nimport missionSlice from '../features/missions/missionSlice';\n\nexport default combineReducers({\n  dragons: dragonReducer,\n  rockets: rocketsReducer,\n  missions: missionSlice,\n});\n","import * as apiActions from '../api';\n\nconst api = ({ dispatch }) => (next) => async (action) => {\n  if (action.type !== apiActions.API_REQUESTED) return next(action);\n\n  next(action);\n  const {\n    payload: {\n      url, method = 'GET', body, onStart, onSuccess, onError,\n    },\n  } = action;\n  if (onStart) dispatch({ type: onStart });\n  try {\n    const response = await fetch(url, {\n      method,\n      body,\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    });\n    const data = await response.json();\n    dispatch(apiActions.onAPICallSuccess());\n    if (onSuccess) dispatch({ type: onSuccess, payload: data });\n  } catch (error) {\n    dispatch(apiActions.onAPICallFail());\n    if (onError) dispatch({ type: onError, payload: error });\n  }\n  return null;\n};\n\nexport default api;\n","import { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './rootReducer';\nimport api from '../features/dragons/store/middleware/api';\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(api),\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './app/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}